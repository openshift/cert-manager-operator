// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	operatorv1alpha1 "github.com/openshift/cert-manager-operator/api/operator/v1alpha1"
	applyconfigurationsoperatorv1alpha1 "github.com/openshift/cert-manager-operator/pkg/operator/applyconfigurations/operator/v1alpha1"
	scheme "github.com/openshift/cert-manager-operator/pkg/operator/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// IstioCSRsGetter has a method to return a IstioCSRInterface.
// A group's client should implement this interface.
type IstioCSRsGetter interface {
	IstioCSRs(namespace string) IstioCSRInterface
}

// IstioCSRInterface has methods to work with IstioCSR resources.
type IstioCSRInterface interface {
	Create(ctx context.Context, istioCSR *operatorv1alpha1.IstioCSR, opts v1.CreateOptions) (*operatorv1alpha1.IstioCSR, error)
	Update(ctx context.Context, istioCSR *operatorv1alpha1.IstioCSR, opts v1.UpdateOptions) (*operatorv1alpha1.IstioCSR, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, istioCSR *operatorv1alpha1.IstioCSR, opts v1.UpdateOptions) (*operatorv1alpha1.IstioCSR, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*operatorv1alpha1.IstioCSR, error)
	List(ctx context.Context, opts v1.ListOptions) (*operatorv1alpha1.IstioCSRList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *operatorv1alpha1.IstioCSR, err error)
	Apply(ctx context.Context, istioCSR *applyconfigurationsoperatorv1alpha1.IstioCSRApplyConfiguration, opts v1.ApplyOptions) (result *operatorv1alpha1.IstioCSR, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, istioCSR *applyconfigurationsoperatorv1alpha1.IstioCSRApplyConfiguration, opts v1.ApplyOptions) (result *operatorv1alpha1.IstioCSR, err error)
	IstioCSRExpansion
}

// istioCSRs implements IstioCSRInterface
type istioCSRs struct {
	*gentype.ClientWithListAndApply[*operatorv1alpha1.IstioCSR, *operatorv1alpha1.IstioCSRList, *applyconfigurationsoperatorv1alpha1.IstioCSRApplyConfiguration]
}

// newIstioCSRs returns a IstioCSRs
func newIstioCSRs(c *OperatorV1alpha1Client, namespace string) *istioCSRs {
	return &istioCSRs{
		gentype.NewClientWithListAndApply[*operatorv1alpha1.IstioCSR, *operatorv1alpha1.IstioCSRList, *applyconfigurationsoperatorv1alpha1.IstioCSRApplyConfiguration](
			"istiocsrs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *operatorv1alpha1.IstioCSR { return &operatorv1alpha1.IstioCSR{} },
			func() *operatorv1alpha1.IstioCSRList { return &operatorv1alpha1.IstioCSRList{} },
		),
	}
}
