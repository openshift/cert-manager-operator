// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/openshift/cert-manager-operator/api/operator/v1alpha1"
	operatorv1alpha1 "github.com/openshift/cert-manager-operator/pkg/operator/applyconfigurations/operator/v1alpha1"
	typedoperatorv1alpha1 "github.com/openshift/cert-manager-operator/pkg/operator/clientset/versioned/typed/operator/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeIstioCSRs implements IstioCSRInterface
type fakeIstioCSRs struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.IstioCSR, *v1alpha1.IstioCSRList, *operatorv1alpha1.IstioCSRApplyConfiguration]
	Fake *FakeOperatorV1alpha1
}

func newFakeIstioCSRs(fake *FakeOperatorV1alpha1, namespace string) typedoperatorv1alpha1.IstioCSRInterface {
	return &fakeIstioCSRs{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.IstioCSR, *v1alpha1.IstioCSRList, *operatorv1alpha1.IstioCSRApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("istiocsrs"),
			v1alpha1.SchemeGroupVersion.WithKind("IstioCSR"),
			func() *v1alpha1.IstioCSR { return &v1alpha1.IstioCSR{} },
			func() *v1alpha1.IstioCSRList { return &v1alpha1.IstioCSRList{} },
			func(dst, src *v1alpha1.IstioCSRList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.IstioCSRList) []*v1alpha1.IstioCSR { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.IstioCSRList, items []*v1alpha1.IstioCSR) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
