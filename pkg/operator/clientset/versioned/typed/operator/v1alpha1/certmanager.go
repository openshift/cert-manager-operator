// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/openshift/cert-manager-operator/api/operator/v1alpha1"
	operatorv1alpha1 "github.com/openshift/cert-manager-operator/pkg/operator/applyconfigurations/operator/v1alpha1"
	scheme "github.com/openshift/cert-manager-operator/pkg/operator/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// CertManagersGetter has a method to return a CertManagerInterface.
// A group's client should implement this interface.
type CertManagersGetter interface {
	CertManagers() CertManagerInterface
}

// CertManagerInterface has methods to work with CertManager resources.
type CertManagerInterface interface {
	Create(ctx context.Context, certManager *v1alpha1.CertManager, opts v1.CreateOptions) (*v1alpha1.CertManager, error)
	Update(ctx context.Context, certManager *v1alpha1.CertManager, opts v1.UpdateOptions) (*v1alpha1.CertManager, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, certManager *v1alpha1.CertManager, opts v1.UpdateOptions) (*v1alpha1.CertManager, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.CertManager, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.CertManagerList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.CertManager, err error)
	Apply(ctx context.Context, certManager *operatorv1alpha1.CertManagerApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.CertManager, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, certManager *operatorv1alpha1.CertManagerApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.CertManager, err error)
	CertManagerExpansion
}

// certManagers implements CertManagerInterface
type certManagers struct {
	*gentype.ClientWithListAndApply[*v1alpha1.CertManager, *v1alpha1.CertManagerList, *operatorv1alpha1.CertManagerApplyConfiguration]
}

// newCertManagers returns a CertManagers
func newCertManagers(c *OperatorV1alpha1Client) *certManagers {
	return &certManagers{
		gentype.NewClientWithListAndApply[*v1alpha1.CertManager, *v1alpha1.CertManagerList, *operatorv1alpha1.CertManagerApplyConfiguration](
			"certmanagers",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.CertManager { return &v1alpha1.CertManager{} },
			func() *v1alpha1.CertManagerList { return &v1alpha1.CertManagerList{} }),
	}
}
