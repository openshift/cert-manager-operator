// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
)

// CertManagerResourceRequirementsApplyConfiguration represents a declarative configuration of the CertManagerResourceRequirements type for use
// with apply.
type CertManagerResourceRequirementsApplyConfiguration struct {
	Limits   *v1.ResourceList `json:"limits,omitempty"`
	Requests *v1.ResourceList `json:"requests,omitempty"`
}

// CertManagerResourceRequirementsApplyConfiguration constructs a declarative configuration of the CertManagerResourceRequirements type for use with
// apply.
func CertManagerResourceRequirements() *CertManagerResourceRequirementsApplyConfiguration {
	return &CertManagerResourceRequirementsApplyConfiguration{}
}

// WithLimits sets the Limits field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Limits field is set to the value of the last call.
func (b *CertManagerResourceRequirementsApplyConfiguration) WithLimits(value v1.ResourceList) *CertManagerResourceRequirementsApplyConfiguration {
	b.Limits = &value
	return b
}

// WithRequests sets the Requests field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Requests field is set to the value of the last call.
func (b *CertManagerResourceRequirementsApplyConfiguration) WithRequests(value v1.ResourceList) *CertManagerResourceRequirementsApplyConfiguration {
	b.Requests = &value
	return b
}
