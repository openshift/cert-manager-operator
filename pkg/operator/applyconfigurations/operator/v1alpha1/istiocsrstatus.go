// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// IstioCSRStatusApplyConfiguration represents a declarative configuration of the IstioCSRStatus type for use
// with apply.
type IstioCSRStatusApplyConfiguration struct {
	ConditionalStatusApplyConfiguration `json:",omitempty,inline"`
	IstioCSRImage                       *string `json:"istioCSRImage,omitempty"`
	IstioCSRGRPCEndpoint                *string `json:"istioCSRGRPCEndpoint,omitempty"`
	ServiceAccount                      *string `json:"serviceAccount,omitempty"`
	ClusterRole                         *string `json:"clusterRole,omitempty"`
	ClusterRoleBinding                  *string `json:"clusterRoleBinding,omitempty"`
}

// IstioCSRStatusApplyConfiguration constructs a declarative configuration of the IstioCSRStatus type for use with
// apply.
func IstioCSRStatus() *IstioCSRStatusApplyConfiguration {
	return &IstioCSRStatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *IstioCSRStatusApplyConfiguration) WithConditions(values ...*v1.ConditionApplyConfiguration) *IstioCSRStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithIstioCSRImage sets the IstioCSRImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IstioCSRImage field is set to the value of the last call.
func (b *IstioCSRStatusApplyConfiguration) WithIstioCSRImage(value string) *IstioCSRStatusApplyConfiguration {
	b.IstioCSRImage = &value
	return b
}

// WithIstioCSRGRPCEndpoint sets the IstioCSRGRPCEndpoint field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IstioCSRGRPCEndpoint field is set to the value of the last call.
func (b *IstioCSRStatusApplyConfiguration) WithIstioCSRGRPCEndpoint(value string) *IstioCSRStatusApplyConfiguration {
	b.IstioCSRGRPCEndpoint = &value
	return b
}

// WithServiceAccount sets the ServiceAccount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceAccount field is set to the value of the last call.
func (b *IstioCSRStatusApplyConfiguration) WithServiceAccount(value string) *IstioCSRStatusApplyConfiguration {
	b.ServiceAccount = &value
	return b
}

// WithClusterRole sets the ClusterRole field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterRole field is set to the value of the last call.
func (b *IstioCSRStatusApplyConfiguration) WithClusterRole(value string) *IstioCSRStatusApplyConfiguration {
	b.ClusterRole = &value
	return b
}

// WithClusterRoleBinding sets the ClusterRoleBinding field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterRoleBinding field is set to the value of the last call.
func (b *IstioCSRStatusApplyConfiguration) WithClusterRoleBinding(value string) *IstioCSRStatusApplyConfiguration {
	b.ClusterRoleBinding = &value
	return b
}
