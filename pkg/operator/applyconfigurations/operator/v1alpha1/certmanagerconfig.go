// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/cert-manager/cert-manager/pkg/apis/meta/v1"
)

// CertManagerConfigApplyConfiguration represents a declarative configuration of the CertManagerConfig type for use
// with apply.
type CertManagerConfigApplyConfiguration struct {
	IssuerRef          *v1.ObjectReference                   `json:"issuerRef,omitempty"`
	IstioCACertificate *ConfigMapReferenceApplyConfiguration `json:"istioCACertificate,omitempty"`
}

// CertManagerConfigApplyConfiguration constructs a declarative configuration of the CertManagerConfig type for use with
// apply.
func CertManagerConfig() *CertManagerConfigApplyConfiguration {
	return &CertManagerConfigApplyConfiguration{}
}

// WithIssuerRef sets the IssuerRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IssuerRef field is set to the value of the last call.
func (b *CertManagerConfigApplyConfiguration) WithIssuerRef(value v1.ObjectReference) *CertManagerConfigApplyConfiguration {
	b.IssuerRef = &value
	return b
}

// WithIstioCACertificate sets the IstioCACertificate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IstioCACertificate field is set to the value of the last call.
func (b *CertManagerConfigApplyConfiguration) WithIstioCACertificate(value *ConfigMapReferenceApplyConfiguration) *CertManagerConfigApplyConfiguration {
	b.IstioCACertificate = value
	return b
}
